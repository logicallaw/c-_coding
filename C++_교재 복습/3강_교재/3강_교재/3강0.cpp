/*
3강 새로운 개념
1.typeid(변수).name():해당 변수의 자료형의 이름을 반환한다.

2-1.할당 표현식:(변수명 = 값)으로 변수에 값을 초기화하고 바로 출력이 가능하다.
ex:
int x;
cout << (x = 3); //3

2-2.연산 우선순위

3.명시적 형변환
:C에서는 캐스팅을 (자료형)변수명으로 했지만, C++에서는 static_cast<자료형>(변수명)으로 형변환한다.

4.numeric_limits 클래스의 멤버함수
:각 멤버함수에 따라 각 자료형의 어떤 값을 반환한다.
max() 멤버함수는 해당 자료형이 표현 가능한 가장 큰 수를 반환할 것이다.

5.오버플로우와 언더플로우
:해당 자료형이 표현 불가능한 값이 되면 각각 최댓값과 최솟값은 최솟값과 최댓값으로 돌아가게 될것이다.

6.조정자(Manipulator)
-dec(10진법),oct(8진법),hex(16진법):매개변수 필요없는 진법 변환 조정자.
-10진법은 그대로, 8진법과 16진법 사용시 
-showbase와 showpos는 서로간 기능이 다르다. showbase는 8진수(oct)는 0을, 16진수(hex)는 0x를 같이 출력하는 반면에
showpos는 십진수가 양수인 경우 +부호를 출력하는 기능을 수행한다.
-internal 정렬 조정자는 부호와 진법을 맨 앞으로, 수는 오른쪽으로 정렬한다.
-setw()는 그 문장(한줄)에만 예외적으로 영향준다.
-set()의 칸수보다 출력 변수의 값이 더 크거나 같으면 왼쪽부터 칸수를 무시하며 칸대로 출력한다.
-조정자 초기화 방법은 iomanip를 include하고
resetiosflags(ios_base::basefield)를 사용하면 정수 출력 관련해서만 조정자가 초기화된다.
예를 들어, showpos조정자 초기화를 원한다면 |ios_base::showpos를 해야한다.
*/