/*
개념정리
1.전위표기, 후위표기(특징:리턴값이 있다는게 새로운 사실)
-전위표기:먼저 증감후 값을 리턴함
-후위표기:리턴 먼저하고 증감함
2.'부과효과(side effect)'란?
:연산이나 표현식을 평가할 때 예상치못한 부작용이 발생하는 것을 말한다.
-예를 들면, 전위 연산자 사용시 먼저 증감 후 값을 리턴하는데 기존 변수의 값을 변경하므로 부과효과가 발생한다.
3.반복문(while, for, do~while)
-while문 종류:카운터 제어반복문(시작 전 카운터 변수 초기화, 이후 증감)
/이벤트 제어반복문(특정 이벤트 발생하면 종료)
/flag 제어반복문(1인값), infinite 제어반복문(본 강의 사용 금지)
4.for문

부족한 개념 정리
1.bool형 변수에 바로 부동소수점이 아닌 값을 입력받으면 true, false 판단하지만,
문자에 대한 처리는 iostream 헤더에 명확한 방법이 없기에 컴파일러에 따라 다르게 해석한다.
기본적으로 문자로 초기화되면 false로 아스키코드 상관없이 처리한다.
그래서, 문자로 입력하고 bool판단하고 싶으면 string변수로 먼저 받고 if~else문을 사용하여 bool를 
다시 저장하는게 바람직해보인다.
2.setw 사용시 iomanip include해야됨.
3.do while문(먼저 입력받고 고려해봄)(사용자 입장에서 잘못된 값이면 다시)
4.while문 (먼저 입력받고 이후에 고려해서 실행할지 결정)(사용자 입장과 컴퓨터 입장 잘 입력해야 탈출)
5.양의 정수 do~while문 조건식이
size<0이 아니라 size < 1이어야만 한다!!
음이 아닌 정수면 0이고 양의 정수면 1이다!!
6.예외적으로
while()조건식에 (cin>>num) 사용시 올바른 정수값 입력되면 true, 정수가 아닌 값이 입력되면
false를 반환한다.
반면, 일반 변수에 (cin>>num)만 사용하면 컴파일 에러가 발생하므로
temp = static_cast<int>(cin>>num)을 사용해야지 오류가 안난다.
while조건식 예외로 알아두자.
새로운 개념
1.()초기화(C++98)
다양한 초기화 방법 중 하나이다.
int a (10) or int a = (10) 써도 되고 안써도 된다.
대입연산자 생략 가능하다.


2.{}초기화(C++11)
uniform initialization(리스트 초기화):리스트 초기화는 정확히 말하면 uniform initialization이고
이는 축소 변환시 데이터 손실을 예방할 수 있다.
-{}중괄호를 사용하여 초기화하고 축소변환이 컴파일시 일어나면 오류를 발생시켜 알려준다.
이는 더 엄격한 초기화 규칙을 따른다.
-int x = {1};로 하거나 int x{1};로 해도 된다. 대입연산자 생략해도 무관.
-일반적으로 대입연산자 생략하고 변수명{}으로 한다.

3.for조건식에서 마지막 증감값을 꼭 1씩이 아니라 
+=2로도 해도됨.

4.<cmath> pow(double x, double y) : x ^ y 거듭제곱

5.for or while 반복문안의 if~else 구문에서 continue가 있으면 해당 하나의 반복문은 종료되고 이후 실행됨.
(continue아래의 코드는 실행되지 않음)

6.double형인데 소수점없는 수이고 정수처럼 출력하고 싶다면
iomanip include하고
fixed setprecision(0)하면 소수점 지워지면서 그대로 그 수를 출력함.
아니면 long long사용해서 출력하면 정수처럼 나옴.



7.반복문 제어변수 사용전 초기화!!!꼭 해야됨.

*/
